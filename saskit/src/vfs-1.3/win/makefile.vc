# Makefile.vc
#
# This makefile is suitable for use with # Microsoft Visual C++ 2.x and 4.0.
#
# This makefile was hacked from Sun's 'example.zip'
# Copyright (c) 1996 Sun Microsystems, Inc.
# Copyright 1997 Tom Poindexter.
# Copyright 2001 Vince Darley.
#

!if !defined(MSDEVDIR) && !defined(MSVCDIR)
MSG = ^
You will need to run vcvars32.bat from Developer Studio, first, to setup^
the environment.  Jump to this line to read the new instructions.
!error $(MSG)
!endif

#------------------------------------------------------------------------------
# HOW TO USE this makefile:
#
# 1)  It is now necessary to have MSVCDir set in the environment.  This is used
#     as a check to see if vcvars32.bat had been run prior to running nmake or
#     during the install of Microsoft Developer Studio, MSVCDir had been set
#     globally and the PATH adjusted.  Either way is valid.
#
#     You'll need to run vcvars32.bat contained in the MsDev's vc(98)/bin
#     directory to setup the proper environment, if needed, for your current
#     setup.  This is a needed bootstrap requirement and allows the swapping of
#     different environments to be easier.
#
# 2)  To use the Platform SDK (not expressly needed), run setenv.bat after
#     vcvars32.bat according to the instructions for it.  This can also turn on
#     the 64-bit compiler, if your SDK has it.
#

MACHINE		= IX86

VFS_VERSION = 1.3.0
DLL_VERSION = 13

# comment the following line to compile with symbols
NODEBUG=1

!IF "$(NODEBUG)" == "1"
DEBUGDEFINES =
DBGX     = 
DBGXMS     = 
!ELSE
DEBUGDEFINES = -DTCL_MEM_DEBUG -DUSE_TCLALLOC=0 -DPURIFY
DBGX     = g
DBGXMS     = d
!ENDIF

PROJECT = vfs$(DLL_VERSION)$(DBGX)

#
# Project directories -- these may need to be customized for your site
#
# ROOT --       location of the example files.
# MSVCDir --    location of VC++ compiler installation.
# TCL --        location where Tcl is installed.
# TCLLIB --     define the Tcl lib (with correct version)

# note that the tcl vclibs should have been unpacked in $(TCL)\lib !!

ROOT    = ..
!IF "$(NODEBUG)" == "1"
WINDIR		 = $(ROOT)\win\Release
!ELSE
WINDIR		 = $(ROOT)\win\Debug
!ENDIF
GENERICDIR	= $(ROOT)\generic
LIBDIR          = $(ROOT)\library

cc32		= $(CC)
link32		= link
libpath32	= /LIBPATH:"$(MSVCDir)\lib"
lib32		= lib

include32	= -I"$(MSVCDir)\include"

# point TCL and TCLLIB to your tcl distribution

TCL     = c:\progra~1\tcl
TCLLIB  = $(TCL)\lib\tclstub85.lib
INSTALLDIR = $(TCL)\lib\vfs$(VFS_VERSION)

######################################################################
# Compile flags
######################################################################

!IF "$(NODEBUG)" == "1"
# This cranks the optimization level to maximize speed
cdebug = -O2 -Gs -GD
!ELSE IF "$(MACHINE)" == "IA64"
cdebug = -Od -Zi
!ELSE
cdebug = -Z7 -Od -WX
!ENDIF

# declarations common to all compiler options
cflags = -c -W3 -nologo -Fp$(TMPDIR)\ -YX -DBUILD_vfs

######################################################################
# Link flags
######################################################################

!IF "$(NODEBUG)" == "1"
ldebug	= /RELEASE
!ELSE
ldebug	= -debug:full -debugtype:cv
!ENDIF

# declarations common to all linker options
lflags	= /NODEFAULTLIB /NOLOGO /MACHINE:$(MACHINE) $(libpath32)

# declarations for use on Intel i386, i486, and Pentium systems
!IF "$(MACHINE)" == "IX86"
DLLENTRY = @12
dlllflags = $(lflags) -entry:_DllMainCRTStartup$(DLLENTRY) -dll
!ELSE IF "$(MACHINE)" == "IA64"
DLLENTRY = @12
dlllflags = $(lflags) -dll
!ELSE
dlllflags = $(lflags) -entry:_DllMainCRTStartup$(DLLENTRY) -dll
!ENDIF

conlflags = $(lflags) -subsystem:console -entry:mainCRTStartup
guilflags = $(lflags) -subsystem:windows -entry:WinMainCRTStartup

!IF "$(MACHINE)" == "PPC"
libc = libc$(DBGXMS).lib
libcdll = crtdll$(DBGXMS).lib
!ELSE
libc = libc$(DBGXMS).lib oldnames.lib
libcdll = msvcrt$(DBGXMS).lib oldnames.lib
!ENDIF

baselibs   = kernel32.lib $(optlibs) advapi32.lib user32.lib
winlibs	   = $(baselibs) gdi32.lib comdlg32.lib winspool.lib

guilibs	   = $(libc) $(winlibs)
conlibs	   = $(libc) $(baselibs)
guilibsdll = $(libcdll) $(winlibs)
conlibsdll = $(libcdll) $(baselibs)

VFSOBJS = \
	$(WINDIR)\vfs.obj

#
# Visual C++ tools
#

PATH=$(COMMON32)/bin;$(MSVCDir)\bin;$(PATH)

cc32    = $(cc32) -I$(MSVCDir)\include
CP      = copy
RM      = del
!if "$(OS)" == "Windows_NT"
RMDIR	= rmdir /S /Q
!else
RMDIR	= deltree /Y
!endif

INCLUDES = \
    -I../../cvs-tcl/generic  \
    -I../../cvs-tcl/win  \
    -I$(MSVCDir)/include	\
    -I../generic

DEFINES = -nologo $(DEBUGDEFINES) -DUSE_TCL_STUBS \
    -DVERSION=\"$(VFS_VERSION)\" 

# 
# Global makefile settings
#

DLLOBJS = \
	$(WINDIR)\vfs.obj

# Targets

all: setup $(PROJECT).dll

test:
	tclsh84 $(ROOT)/tests/all.tcl $(TESTFLAGS)

setup:
	-@md $(WINDIR)

install:	$(PROJECT).dll
	-@md $(INSTALLDIR)
	$(CP) $(LIBDIR)\*.tcl $(INSTALLDIR)
	$(CP) $(LIBDIR)\tclIndex $(INSTALLDIR)
	$(CP) $(PROJECT).dll $(INSTALLDIR)\$(PROJECT).dll

$(PROJECT).dll: $(DLLOBJS)
	$(link32) $(ldebug) $(dlllflags) $(TCLLIB) \
		$(guilibsdll) -out:$(PROJECT).dll $(DLLOBJS)

# Implicit Targets

#.c.obj:
#	$(cc32) $(cdebug) $(cflags) $(cvarsdll) $(INCLUDES) \
#		$(DEFINES) -Fo$(WINDIR)\ $<

$(WINDIR)\vfs.obj: $(GENERICDIR)\vfs.c
	$(cc32) $(cdebug) $(cflags) $(cvarsdll) $(INCLUDES) \
		$(DEFINES) -Fo$(WINDIR)\ $?

clean:
	-$(RM) $(WINDIR)\*.obj
	-$(RMDIR) $(WINDIR)
	-$(RM) $(PROJECT).dll
	-$(RM) $(PROJECT).lib
	-$(RM) $(PROJECT).exp

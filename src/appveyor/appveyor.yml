version: '{build}'

branches:
  only:
    - master
      # test with: echo 0.94.12-rc.1 | grep -oE '\d+\.\d+\.\d+(-(alpha|beta|rc)\.\d)?$'
      # see https://semver.org/
    - /\d+\.\d+\.\d+(-(alpha|beta|rc)\d+)?$/

skip_commits:
  files:
    - .github/**/*
    - '*.md'
    - '*.txt'

init:
  - git config --global core.autocrlf input
  - git config --global advice.detachedHead false
# https://github.com/appveyor/ci/issues/899#issuecomment-567280434
clone_script:
  - sh -c 'git clone --depth=2 --recursive --branch=$APPVEYOR_REPO_BRANCH https://github.com/$APPVEYOR_REPO_NAME.git $APPVEYOR_BUILD_FOLDER'
  - ps: cd $env:APPVEYOR_BUILD_FOLDER
  - ps: git checkout -qf $env:APPVEYOR_REPO_COMMIT
  - ps: git submodule update --init --recursive

image:
  # Linux first since its faster and there is more time for source snapshot upload to zenodo later
  - Ubuntu2004
  - Visual Studio 2019
  - macos-sonoma

environment:
  BT_API:
    secure: 0SIbW51d73pYhmh4CehqtmGdksH4jBCD4uyTpeJPsNEx7fF5dGAikfSDVlR6HLGX
  APPVEYOR_TOKEN:
    secure: mdkr0G05WlB+R6OUbrgfvMACBjlmZce0VZCjB8mfnMA=
  CLOUDSMITH_KEY:
    secure: W/Nf9rURGNNqj4clwDkiWqVQ83eLVynha1nhtey0c8gqbVjQCAs/fJEqX528UScL
  ZENODO_TOKEN:
    # secure: ki7GAxwdqxTVUG/tVfsHEL5IVidtwLuOMPbQ2By5GwyJNt5/fEZG+2Zam5vNZEGk4nOloBWow3Bt6efx85yBYg==
    secure: KIU1ZKtCu17ytSmm2ZVuzYEW9lqQ0FDi2JMiUQ8twNfZbJJH9Aoys8wKqGqQyq1r1BDcPK8rBORinCCqoslecA==

  matrix:
    # dummy var enables for.matrix.only specific ENV vars below
    - DUMMY:

for:
-
  matrix:
    only:
      - image: Visual Studio 2019
  environment:
    COMPILER: msys2
    PLATFORM: x64
    MSYS2_ARCH: x86_64
    MSYS2_DIR: msys64
    MSYSTEM: MINGW64
    CACHEID: windows64
  install:
    - src\appveyor\0_install_win.bat
  artifacts:
    # final SASfit package
    - path: src\sasfit_*_*.zip
      name: sasfit_package_win
    - path: saskit\saskit_*.exe
  cache: # 1GB max with free accounts
    # do not use src packages zip/tar.gz as dependencies, checksum calc needs forever
    - 'src\gsl\%CACHEID%      -> src\gsl\CMakeLists.txt, src\cmake, src\CMakeLists.txt'
    - 'src\fftw\%CACHEID%     -> src\fftw\CMakeLists.txt, src\cmake, src\CMakeLists.txt'
    - 'src\tcl\%CACHEID%      -> src\tcl\CMakeLists.txt, src\cmake, src\CMakeLists.txt'
    - 'src\sundials\%CACHEID% -> src\sundials\CMakeLists.txt, src\cmake, src\CMakeLists.txt'
    - 'saskit\saskit_%CACHEID%.exe -> src\appveyor, src\cmake, src\CMakeLists.txt'

-
  matrix:
    only:
      - image: macos-sonoma
  environment:
    CACHEID: macos64
  install:
    - sh src/appveyor/0_install_macos.sh
  artifacts:
    # final SASfit package
    - path: src/sasfit_*_*.tar.bz2
      name: sasfit_package_macos
    - path: saskit/saskit_*
  cache: # 1GB max with free accounts
    # do not use src packages zip/tar.gz as dependencies, checksum calc needs forever
    - 'src/gsl/$CACHEID      -> src/gsl/CMakeLists.txt, src/cmake, src/CMakeLists.txt'
    - 'src/fftw/$CACHEID     -> src/fftw/CMakeLists.txt, src/cmake, src/CMakeLists.txt'
    - 'src/tcl/$CACHEID      -> src/tcl/CMakeLists.txt, src/cmake, src/CMakeLists.txt'
    - 'src/sundials/$CACHEID -> src/sundials/CMakeLists.txt, src/cmake, src/CMakeLists.txt'
    - 'saskit/saskit_$CACHEID -> src/appveyor, src/cmake, src/CMakeLists.txt'

-
  matrix:
    only:
      - image: Ubuntu2004
  environment:
    CACHEID: linux64
  install:
    - sh src/appveyor/0_install_linux.sh
  artifacts:
    # final SASfit package
    - path: SASfit*.AppImage
      name: sasfit_package_lin
    - path: saskit/saskit_*
  cache: # 1GB max with free accounts
    # do not use src packages zip/tar.gz as dependencies, checksum calc needs forever
    - 'src/gsl/$CACHEID      -> src/gsl/CMakeLists.txt, src/cmake, src/CMakeLists.txt'
    - 'src/fftw/$CACHEID     -> src/fftw/CMakeLists.txt, src/cmake, src/CMakeLists.txt'
    - 'src/tcl/$CACHEID      -> src/tcl/CMakeLists.txt, src/cmake, src/CMakeLists.txt'
    - 'src/sundials/$CACHEID -> src/sundials/CMakeLists.txt, src/cmake, src/CMakeLists.txt'

build_script:
    - sh src/appveyor/4_build.sh

after_build:
    - sh src/appveyor/6_after_build.sh

# another test, different syntax
test_script:
    - sh -c '. src/appveyor/7_testing.sh; testIfExists "$SASFIT_EXEC" "the SASfit executable"'
    - sh -c '. src/appveyor/7_testing.sh; testIfExists "$SASFIT_SASKIT_EXEC" "the saskit executable"'
    - sh -c '. src/appveyor/7_testing.sh; testIfExists "$SASFIT_PACKAGE_FILE" "the SASfit package"'
#    - sh -c '$SASFIT_EXEC'

notifications:
  - provider: Email
    to:
      - sasfit-ci@ingobressler.net
    on_build_success: false

deploy:
    # release tags from master branch on GitHub
  - provider: GitHub
    tag: $(SASFIT_VERSION)
    release: v$(SASFIT_VERSION) $(SASFIT_RELEASE_DATE)
    description: $(SASFIT_VERSION_DESCR)
    artifact: sasfit_package_win, sasfit_package_macos, sasfit_package_lin
    auth_token:
      secure: DFCyoA1EuoMYAxhTES5QlyOyAw/UEj+zBnCdqn8WSUFcsY+rZHmqbO/7CAfv/zNN
    on:
      APPVEYOR_REPO_TAG: true

on_success:
  - python3 --version
  # install packages needed by the after_deploy script
  - python3 -m pip install --user requests python-dateutil pyyaml
  # cleanup AppVeyor history
  - python3 src/appveyor/citools/appveyor_keep_builds.py 10
  # upload binary packages to cloudsmith.io
  - python3 src/appveyor/8_cloudsmith_upload.py
  # upload to zenodo each binary, if all binaries are in place finalize by publishing zenodo record
  - python3 src/appveyor/9_zenodo_upload.py

# vim: set ts=2 sw=2 sts=2 tw=0 et:

# appimage-builder recipe see https://appimage-builder.readthedocs.io for details
version: 1
script:
  - echo "Removing any existing appdir '$APPDIR'"
  - rm -Rf "$APPDIR" | true
AppDir:
  # assuming this file resides in sasfit/src/,
  # addresses the package dir created by CMake previously
  path: ../../sasfit_210715150658_linux64_debug
  app_info:
    id: SASfit
    name: SASfit
    icon: sasfit_icon
    version: latest
    exec: saskit
    exec_args: $APPDIR/sasfit.vfs/main.tcl $@
  before_bundle: |
    echo "before_bundle"
  after_bundle:
    - echo "after_bundle"
    # adjustments to the current layout CMake prepares
    - (cd "$APPDIR" && rm -Rf sasfit sasfit.sh lib) # files not needed anymore, FIXME
    - cd .. # changing to SASfit root dir
    - cp -R sasfit.vfs "$APPDIR"/
    # FIXME: generate proper icons from the svg
    - mkdir -p "$APPDIR"/usr/share/icons && cp doc/images/sasfit_icon.svg "$APPDIR"/usr/share/icons/
    # Copy the saskit dqkit to let it get the proper libc interpreter update
    - cp saskit/build/*/dqkit/dqkit.bin "$APPDIR"/saskit
    #- killall appimage-builder; exit
    #- export TCLSH="$APPDIR/sasfit-src/src/tcl/linux64/bin/tclsh8.4"
    #- cd "$APPDIR/sasfit-src/saskit" && sh gen/common.sh
  before_runtime:
    - echo "before_runtime"
  after_runtime: |
    echo "after_runtime"
    cd .. # changing to SASfit root dir
    #
    # copy modified dqkit back to the saskit source for reassembling
    SASKIT_BUILD_PATH="$(find saskit/build/ -mindepth 1 -maxdepth 1 -type d)"
    SF_DEBUG="$(echo $SASKIT_BUILD_PATH | grep -o debug || true)"
    [ -z "$SF_DEBUG" ] || SF_DEBUG="-$SF_DEBUG"
    echo "SF_DEBUG: '$SF_DEBUG', SASKIT_BUILD_PATH: '$SASKIT_BUILD_PATH'"
    cp "$APPDIR"/saskit "$SASKIT_BUILD_PATH"/dqkit/dqkit.bin
    export TCLSH="$(readlink -f src/tcl/linux64/bin/tclsh8.4)"
    #
    # create the ld in /tmp for the other binaries to work
    ("$APPDIR"/AppRun <(echo exit)) || true
    #
    # reassemble the combined tcl interpreter with the redirected ld
    (cd saskit && $TCLSH gen/buildkit finalize $SF_DEBUG -tcl=*.* -tk=*.* -blt -compression=none -binary=all -resfile=current)
    #
    # copy the reassembled tcl interpreter back into the app dir
    cp saskit/bin/*/dqkit-all.bin "$APPDIR"/saskit
  apt:
    arch:
    - amd64
    allow_unauthenticated: false
    sources:
    - sourceline: deb http://us.archive.ubuntu.com/ubuntu/ focal main restricted
      key_url: http://keyserver.ubuntu.com/pks/lookup?op=get&search=0x871920D1991BC93C
    - sourceline: deb http://us.archive.ubuntu.com/ubuntu/ focal-updates main restricted
    - sourceline: deb http://us.archive.ubuntu.com/ubuntu/ focal universe
    - sourceline: deb http://us.archive.ubuntu.com/ubuntu/ focal-updates universe
    - sourceline: deb http://us.archive.ubuntu.com/ubuntu/ focal multiverse
    - sourceline: deb http://us.archive.ubuntu.com/ubuntu/ focal-updates multiverse
    - sourceline: deb http://us.archive.ubuntu.com/ubuntu/ focal-backports main restricted universe multiverse
    - sourceline: deb http://security.ubuntu.com/ubuntu focal-security main restricted
    - sourceline: deb http://security.ubuntu.com/ubuntu focal-security universe
    - sourceline: deb http://security.ubuntu.com/ubuntu focal-security multiverse
    include:
    - libgcc-s1
    - libstdc++6
  files:
    include:
    - sasfit-src/doc/images/sasfit_icon*
    - sasfit-src/doc/manual/sasfit.pdf
    - sasfit-src/data/test.dat
    - sasfit-src/plugins/*
    - sasfit-src/sasfit.vfs/**
    - sasfit-src/saskit/**
    - sasfit-src/src/**
    - sasfit-src/Readme.md
    - sasfit-src/sasfit.sh
    - sasfit-src/config.ini
    - sasfit-src/Copyright_notice.txt
    - sasfit-src/KNOWN_BUGS.txt
    - sasfit-src/CHANGES.txt
    - sasfit-src/examples.zip
    - sasfit-src/COPYING.txt
    exclude:
    - opt/libc/usr/share/doc
    - usr/lib/x86_64-linux-gnu/gconv
    - usr/share/man
    - usr/share/doc/*/README.*
    - usr/share/doc/*/changelog.*
    - usr/share/doc/*/NEWS.*
    - usr/share/doc/*/TODO.*
    - usr/include
  test:
    ubuntu-xenial:
      image: appimagecrafters/tests-env:ubuntu-xenial
      command: ./AppRun
      use_host_x: true
AppImage:
  arch: x86_64
  update-information: guess

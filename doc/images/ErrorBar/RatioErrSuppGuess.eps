%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 0 0 814 572
%%LanguageLevel: 2
%%Creator: OriginLab Corporation
%%Title: (C:\user\sasfit\doc\images\ErrorBar\RatioErrSuppGuess.eps)
%%CreationDate: Sun Sep 07 23:25:21 2014
%%EndComments

/OriginLab::PSL1 128 dict dup begin def
/Save0 save def
%%BeginResource: procset OriginLab::PSL1
/wd{1 index where{pop pop pop}{bind def}ifelse}bind def
/setcmykcolor{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll}repeat setrgbcolor pop}wd
/selectfont{dup type/arraytype eq{exch findfont exch makefont setfont}{exch findfont exch scalefont setfont}ifelse}wd
/xshow{1 index length 0 le{}{currentpoint exch 3 index length 1 sub 0 exch 1 exch{dup 5 index exch 1 getinterval show 3 index exch get add 2 copy exch moveto}for pop pop}ifelse pop pop}wd
/glyphshow{matrix currentmatrix exch currentfont dup/FontMatrix get concat currentpoint translate
 dup/Metrics get 2 index get 0 4 2 roll gsave/CharProcs get exch 2 copy known not{pop/.notdef}if
 get exec fill grestore moveto setmatrix}wd
/grayimage/image load def/rgbtogray{cvx exec dup length 3 idiv 1 sub 0 exch 1 exch{dup 3 mul dup 3 index exch get 255 div .3 mul exch
 1 add dup 4 index exch get 255 div .59 mul exch 1 add 4 index exch get 255 div .11 mul add add
 255 mul dup 255 gt{255}if round cvi 2 index 3 1 roll put}for dup length 3 idiv 0 exch getinterval}bind def
/colorimage{0 setgray pop pop cvlit/rgbtogray cvx 2 packedarray cvx grayimage}wd
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/xd{cvx def}bd
/np/newpath ld/a/arc ld/m/moveto ld/l/lineto ld/c/curveto ld/rm/rmoveto ld/rl/rlineto ld/rc/rcurveto ld/cp/closepath ld/cpt/currentpoint ld
/tr/translate ld/sc/scale ld/ro/rotate ld/t/transform ld/it/itransform ld/dt/dtransform ld/idt/idtransform ld
/mtx/matrix ld/cmtx/currentmatrix ld/dmtx/defaultmatrix ld/smtx/setmatrix ld/catmtx/concatmatrix ld
/sw/setlinewidth ld/scap/setlinecap ld/sj/setlinejoin ld/sm/setmiterlimit ld/sd/setdash ld/rgb/setrgbcolor ld/crgb/currentrgbcolor ld/cmyk/setcmykcolor ld/gs/gsave ld/gr/grestore ld
/st/stroke ld/fi/fill ld/eofi/eofill ld/cl/clip ld/eocl/eoclip ld
/df/definefont ld/ff/findfont ld/sf/setfont ld/scf/scalefont ld/self/selectfont ld/cf/currentfont ld
/s/show ld/xs/xshow ld/gls/glyphshow ld/xgls{cpt 3 1 roll add exch 3 -1 roll gls m}bd
/cd/currentdict ld/i/index ld
/DrawBox{4 2 roll m 1 index 0 rl 0 exch rl neg 0 rl cp}bd
/plus.re { 6 { 3 index } repeat moveto 0 exch rlineto 0 rlineto pop pop neg 0 exch rlineto pop lineto closepath } def
/DrawBcc{4 2 roll m 2 copy 0 lt exch 0 lt xor{dup 0 exch rl exch 0 rl neg 0 exch rl}{exch dup 0 rl exch 0 exch rl neg 0 rl}ifelse cp}bd
/rectline{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBox}for pop}{DrawBox}ifelse}bd
/rectpath{dup type/arraytype eq{dup length 0 exch 4 exch 4 sub{0 1 3{3 copy add get 4 1 roll pop}for pop 5 1 roll DrawBcc}for pop}{DrawBcc}ifelse}bd
/pathproc{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall]cvx}bd
/L1img/image ld/L1idx[{0}
 {dup 7 and 3 1 roll -3 bitshift get exch 7 sub 1 mul bitshift  1 and}bind 1 index dup
 {dup 1 and 3 1 roll -1 bitshift get exch 1 sub 4 mul bitshift 15 and}bind 1 index dup dup
 {get}bind]def
/image{dup type/dicttype eq {dup/ImgCS get 0 get/Indexed eq}{false}ifelse
 {begin Width Height 8 ImageMatrix {rgb_string rgb_lookup
 cd/DataSource get dup type/filetype eq
 {mystring readstring pop}{exec}ifelse
 dup length 0 ne
 {L1idx BitsPerComponent get 0 1 Width 1 sub
 {3 copy exch exec exch 3 mul exch
 3 mul dup 5 index exch get exch 1 add dup 6 index exch get exch 1 add 6 index exch get
 7 index exch 4 index 2 add exch put 6 index exch 3 index 1 add exch put 5 index exch 2 index exch put pop
 }for pop pop pop }{pop pop pop ()}ifelse }false 3 colorimage end} {dup type/dicttype eq
 {{dup mark exch L1img pop pop}stopped{cleartomark begin Width Height BitsPerComponent ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }false 3 colorimage end} if}{L1img}ifelse}ifelse
 }bd
/L1imgmask/imagemask ld/imagemask{dup type/dicttype eq
 {{dup mark exch L1imgmask pop pop}stopped {cleartomark begin Width Height polarityflag ImageMatrix
 {cd/DataSource get dup type/filetype eq {mystring readstring pop}{exec}ifelse
 }L1imgmask end}if}{L1imgmask}ifelse
 }bd
% Gradient function
/GradientStep 1 150 div def
/GradientStartRGB { /R1 exch def /G1 exch def /B1 exch def } def
/GradientEndRGB { /R2 exch def /G2 exch def /B2 exch def
/GradientSteps GradientLength GradientStep div def
/GradientRStep R2 R1 sub GradientSteps div def
/GradientGStep G2 G1 sub GradientSteps div def
/GradientBStep B2 B1 sub GradientSteps div def
} def
/GradientStepRGB { /R1 R1 GradientRStep add def
/G1 G1 GradientGStep add def
/B1 B1 GradientBStep add def
R1 G1 B1 setrgbcolor
} def
%%EndResource
/rectclip{np rectpath clip np}wd
/rectfill{gs np rectpath fi gr}wd
/rectstroke{gs np dup type/arraytype eq{dup length 6 eq}{false}ifelse{1 index type/arraytype eq{exch}{5 1 roll}ifelse rectline concat st}{rectline st}ifelse gr}wd
%%BeginResource: procset OriginLab::Image
/OriginLab::Image 32 dict dup begin
/BinProc{[currentfile mystring /readstring cvx /pop cvx] cvx bind}bd
/HexProc{[currentfile mystring /readhexstring cvx /pop cvx] cvx bind}bd
/Ascii85Proc{currentfile /ASCII85Decode filter}bd
/LZWA85{currentfile /ASCII85Decode filter /LZWDecode filter}bd
/ImgProcArray[/BinProc /HexProc /Ascii85Proc /LZWA85]def
/ImgDict{/ImgDict 16 dict def ImgDict dup begin /ImageType 1 def /MultipleDataSource false def end}bd
/L2Dec{{[1 0]}{[0 1]}ifelse}bd
/BegImg{ /Img_sv save def
 /ImgDir ed ImgProcArray exch get /ImgProc exch ld
 dup /polarityflag ed L2Dec /polarity ed /smoothflag ed
 tr /dx 2 index def /dy 1 index abs def sc
 string /mystring ed /bpc ed /ih ed /iw ed
 }bd
/EndImg {Img_sv restore}bd
/DoXImg{ /rgb_lookup ed /hival ed ImgDict dup begin
 [/Indexed /DeviceRGB hival rgb_lookup] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 bpc{2 mul}repeat 1 sub] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent bpc def
 /Interpolate smoothflag def
 end image}bd
/DoImg{ ImgDict dup begin
 [/DeviceRGB] /L1img where{pop/ImgCS ed}{setcolorspace}ifelse
 /rgb_string iw 3 mul string def
 /Width iw def
 /Height ih def
 /Decode [0 1 0 1 0 1] def
 /ImageMatrix
  ImgDir 0 eq{[iw 0 0 ih 0 0]}if
  ImgDir 1 eq{[iw neg 0 0 ih iw 0]}if
  ImgDir 2 eq{[iw 0 0 ih neg 0 ih]}if
  ImgDir 3 eq{[iw neg 0 0 ih neg iw ih]}if
  def
 /DataSource ImgProc def
 /BitsPerComponent 8 def
 /Interpolate smoothflag def
 end image}bd
end def
%%EndResource
/initmtx mtx cmtx def
%%BeginFont: /MC1_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC1_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2060] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 45/s45 put
Encoding 47/s47 put
Encoding 48/s48 put
Encoding 49/s49 put
Encoding 50/s50 put
Encoding 51/s51 put
Encoding 52/s52 put
Encoding 109/s109 put
Encoding 110/s110 put
Encoding 113/s113 put
/BoundingBoxes 12 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s45 [0 -434 682 1854] def
/s47 [0 -434 569 1854] def
/s48 [0 -434 1139 1854] def
/s49 [0 -434 1139 1854] def
/s50 [0 -434 1139 1854] def
/s51 [0 -434 1139 1854] def
/s52 [0 -434 1139 1854] def
/s109 [0 -434 1706 1854] def
/s110 [0 -434 1139 1854] def
/s113 [0 -434 1139 1854] def
end
/Metrics 12 dict def
 Metrics begin
/s32 569 def
/s45 682 def
/s47 569 def
/s48 1139 def
/s49 1139 def
/s50 1139 def
/s51 1139 def
/s52 1139 def
/s109 1706 def
/s110 1139 def
/s113 1139 def
end
/CharProcs 12 dict def
CharProcs begin
/.notdef {} def
/s45 {
65 440 m
65 621 65 440 65 621 c
618 621 65 621 618 621 c
618 440 618 621 618 440 c
65 440 618 440 65 440 c
closepath } bind def
/s47 {
0 -25 m
425 1491 0 -25 425 1491 c
569 1491 425 1491 569 1491 c
145 -25 569 1491 145 -25 c
0 -25 145 -25 0 -25 c
closepath } bind def
/s48 {
85 723 m
85 896.33 102.83 1035.83 138.5 1141.5 c
174.17 1247.17 227.17 1328.67 297.5 1386 c
367.83 1443.33 456.33 1472 563 1472 c
641.67 1472 710.67 1456.17 770 1424.5 c
829.33 1392.83 878.33 1347.17 917 1287.5 c
955.67 1227.83 986 1155.17 1008 1069.5 c
1030 983.83 1041 868.33 1041 723 c
1041 551 1023.33 412.17 988 306.5 c
952.67 200.83 899.83 119.17 829.5 61.5 c
759.17 3.83 670.33 -25 563 -25 c
421.67 -25 310.67 25.67 230 127 c
133.33 249 85 447.67 85 723 c
closepath 270 723 m
270 482.33 298.17 322.17 354.5 242.5 c
410.83 162.83 480.33 123 563 123 c
645.67 123 715.17 163 771.5 243 c
827.83 323 856 483 856 723 c
856 964.33 827.83 1124.67 771.5 1204 c
715.17 1283.33 645 1323 561 1323 c
478.33 1323 412.33 1288 363 1218 c
301 1128.67 270 963.67 270 723 c
closepath } bind def
/s49 {
763 0 m
583 0 763 0 583 0 c
583 1147 583 0 583 1147 c
539.67 1105.67 482.83 1064.33 412.5 1023 c
342.17 981.67 279 950.67 223 930 c
223 1104 223 930 223 1104 c
323.67 1151.33 411.67 1208.67 487 1276 c
562.33 1343.33 615.67 1408.67 647 1472 c
763 1472 647 1472 763 1472 c
763 0 763 1472 763 0 c
closepath } bind def
/s50 {
1031 173 m
1031 0 1031 173 1031 0 c
62 0 1031 0 62 0 c
60.67 43.33 67.67 85 83 125 c
107.67 191 147.17 256 201.5 320 c
255.83 384 334.33 458 437 542 c
596.33 672.67 704 776.17 760 852.5 c
816 928.83 844 1001 844 1069 c
844 1140.33 818.5 1200.5 767.5 1249.5 c
716.5 1298.5 650 1323 568 1323 c
481.33 1323 412 1297 360 1245 c
308 1193 281.67 1121 281 1029 c
96 1048 281 1029 96 1048 c
108.67 1186 156.33 1291.17 239 1363.5 c
321.67 1435.83 432.67 1472 572 1472 c
712.67 1472 824 1433 906 1355 c
988 1277 1029 1180.33 1029 1065 c
1029 1006.33 1017 948.67 993 892 c
969 835.33 929.17 775.67 873.5 713 c
817.83 650.33 725.33 564.33 596 455 c
488 364.33 418.67 302.83 388 270.5 c
357.33 238.17 332 205.67 312 173 c
1031 173 312 173 1031 173 c
closepath } bind def
/s51 {
86 387 m
266 411 86 387 266 411 c
286.67 309 321.83 235.5 371.5 190.5 c
421.17 145.5 481.67 123 553 123 c
637.67 123 709.17 152.33 767.5 211 c
825.83 269.67 855 342.33 855 429 c
855 511.67 828 579.83 774 633.5 c
720 687.17 651.33 714 568 714 c
534 714 491.67 707.33 441 694 c
461 852 441 694 461 852 c
473 850.67 482.67 850 490 850 c
566.67 850 635.67 870 697 910 c
758.33 950 789 1011.67 789 1095 c
789 1161 766.67 1215.67 722 1259 c
677.33 1302.33 619.67 1324 549 1324 c
479 1324 420.67 1302 374 1258 c
327.33 1214 297.33 1148 284 1060 c
104 1092 284 1060 104 1092 c
126 1212.67 176 1306.17 254 1372.5 c
332 1438.83 429 1472 545 1472 c
625 1472 698.67 1454.83 766 1420.5 c
833.33 1386.17 884.83 1339.33 920.5 1280 c
956.17 1220.67 974 1157.67 974 1091 c
974 1027.67 957 970 923 918 c
889 866 838.67 824.67 772 794 c
858.67 774 926 732.5 974 669.5 c
1022 606.5 1046 527.67 1046 433 c
1046 305 999.33 196.5 906 107.5 c
812.67 18.5 694.67 -26 552 -26 c
423.33 -26 316.5 12.33 231.5 89 c
146.5 165.67 98 265 86 387 c
closepath } bind def
/s52 {
662 0 m
662 351 662 0 662 351 c
26 351 662 351 26 351 c
26 516 26 351 26 516 c
695 1466 26 516 695 1466 c
842 1466 695 1466 842 1466 c
842 516 842 1466 842 516 c
1040 516 842 516 1040 516 c
1040 351 1040 516 1040 351 c
842 351 1040 351 842 351 c
842 0 842 351 842 0 c
662 0 842 0 662 0 c
closepath 662 516 m
662 1177 662 516 662 1177 c
203 516 662 1177 203 516 c
662 516 203 516 662 516 c
closepath } bind def
/s109 {
135 0 m
135 1062 135 0 135 1062 c
296 1062 135 1062 296 1062 c
296 913 296 1062 296 913 c
329.33 965 373.67 1006.83 429 1038.5 c
484.33 1070.17 547.33 1086 618 1086 c
696.67 1086 761.17 1069.67 811.5 1037 c
861.83 1004.33 897.33 958.67 918 900 c
1002 1024 1111.33 1086 1246 1086 c
1351.33 1086 1432.33 1056.83 1489 998.5 c
1545.67 940.17 1574 850.33 1574 729 c
1574 0 1574 729 1574 0 c
1395 0 1574 0 1395 0 c
1395 669 1395 0 1395 669 c
1395 741 1389.17 792.83 1377.5 824.5 c
1365.83 856.17 1344.67 881.67 1314 901 c
1283.33 920.33 1247.33 930 1206 930 c
1131.33 930 1069.33 905.17 1020 855.5 c
970.67 805.83 946 726.33 946 617 c
946 0 946 617 946 0 c
766 0 946 0 766 0 c
766 690 766 0 766 690 c
766 770 751.33 830 722 870 c
692.67 910 644.67 930 578 930 c
527.33 930 480.5 916.67 437.5 890 c
394.5 863.33 363.33 824.33 344 773 c
324.67 721.67 315 647.67 315 551 c
315 0 315 551 315 0 c
135 0 315 0 135 0 c
closepath } bind def
/s110 {
135 0 m
135 1062 135 0 135 1062 c
297 1062 135 1062 297 1062 c
297 911 297 1062 297 911 c
375 1027.67 487.67 1086 635 1086 c
699 1086 757.83 1074.5 811.5 1051.5 c
865.17 1028.5 905.33 998.33 932 961 c
958.67 923.67 977.33 879.33 988 828 c
994.67 794.67 998 736.33 998 653 c
998 0 998 653 998 0 c
818 0 998 0 818 0 c
818 646 818 0 818 646 c
818 719.33 811 774.17 797 810.5 c
783 846.83 758.17 875.83 722.5 897.5 c
686.83 919.17 645 930 597 930 c
520.33 930 454.17 905.67 398.5 857 c
342.83 808.33 315 716 315 580 c
315 0 315 580 315 0 c
135 0 315 0 135 0 c
closepath } bind def
/s113 {
812 -407 m
812 113 812 -407 812 113 c
784 73.67 744.83 41 694.5 15 c
644.17 -11 590.67 -24 534 -24 c
408 -24 299.5 26.33 208.5 127 c
117.5 227.67 72 365.67 72 541 c
72 647.67 90.5 743.33 127.5 828 c
164.5 912.67 218.17 976.83 288.5 1020.5 c
358.83 1064.17 436 1086 520 1086 c
651.33 1086 754.67 1030.67 830 920 c
830 1062 830 920 830 1062 c
992 1062 830 1062 992 1062 c
992 -407 992 1062 992 -407 c
812 -407 992 -407 812 -407 c
closepath 257 534 m
257 397.33 285.67 294.83 343 226.5 c
400.33 158.17 469 124 549 124 c
625.67 124 691.67 156.5 747 221.5 c
802.33 286.5 830 385.33 830 518 c
830 659.33 800.83 765.67 742.5 837 c
684.17 908.33 615.67 944 537 944 c
459 944 392.83 910.83 338.5 844.5 c
284.17 778.17 257 674.67 257 534 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC1_Arial exch definefont pop
%%EndFont
%%BeginFont: /MC2_Symbol
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -223.00 def
/UnderlineThickness 100.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC2_Symbol def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1 -450 2279 2059] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
/BoundingBoxes 3 dict def
BoundingBoxes begin
/s32 [0 -450 512 2059] def
/s61508 [0 -450 0 2059] def
end
/Metrics 3 dict def
 Metrics begin
/s32 512 def
/s61508 0 def
end
/CharProcs 3 dict def
CharProcs begin
/.notdef {} def
/s61508 {
1226 0 m
26 0 1226 0 26 0 c
654 1387 26 0 654 1387 c
1226 0 654 1387 1226 0 c
closepath 990 82 m
591 1049 990 82 591 1049 c
151 82 591 1049 151 82 c
990 82 151 82 990 82 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC2_Symbol exch definefont pop
%%EndFont
%%BeginFont: /MC3_Arial
12 dict begin
/FontInfo 8 dict dup begin
/ItalicAngle 0 def
/UnderlinePosition -217.00 def
/UnderlineThickness 150.00 def
/StrikeoutPosition 530.00 def
/StrikeoutThickness 102.00 def
/isFixedPitch false def
end readonly def
/FontName /MC3_Arial def
/FontType 3 def
/FontMatrix [1 2048 div 0 0 1 2048 div 0 0] def
/FontBBox [-1361 -665 4096 2060] def
/Encoding 256 array def 0 1 255{Encoding exch/.notdef put}for
Encoding 32/s32 put
Encoding 47/s47 put
Encoding 101/s101 put
Encoding 102/s102 put
Encoding 103/s103 put
Encoding 105/s105 put
Encoding 108/s108 put
Encoding 115/s115 put
Encoding 117/s117 put
/BoundingBoxes 10 dict def
BoundingBoxes begin
/s32 [0 -434 569 1854] def
/s47 [0 -434 569 1854] def
/s101 [0 -434 1139 1854] def
/s102 [0 -434 569 1854] def
/s103 [0 -434 1139 1854] def
/s105 [0 -434 455 1854] def
/s108 [0 -434 455 1854] def
/s115 [0 -434 1024 1854] def
/s117 [0 -434 1139 1854] def
end
/Metrics 10 dict def
 Metrics begin
/s32 569 def
/s47 569 def
/s101 1139 def
/s102 569 def
/s103 1139 def
/s105 455 def
/s108 455 def
/s115 1024 def
/s117 1139 def
end
/CharProcs 10 dict def
CharProcs begin
/.notdef {} def
/s47 {
0 -25 m
425 1491 0 -25 425 1491 c
569 1491 425 1491 569 1491 c
145 -25 569 1491 145 -25 c
0 -25 145 -25 0 -25 c
closepath } bind def
/s101 {
862 342 m
1048 319 862 342 1048 319 c
1018.67 210.33 964.33 126 885 66 c
805.67 6 704.33 -24 581 -24 c
425.67 -24 302.5 23.83 211.5 119.5 c
120.5 215.17 75 349.33 75 522 c
75 700.67 121 839.33 213 938 c
305 1036.67 424.33 1086 571 1086 c
713 1086 829 1037.67 919 941 c
1009 844.33 1054 708.33 1054 533 c
1054 522.33 1053.67 506.33 1053 485 c
261 485 1053 485 261 485 c
267.67 368.33 300.67 279 360 217 c
419.33 155 493.33 124 582 124 c
648 124 704.33 141.33 751 176 c
797.67 210.67 834.67 266 862 342 c
closepath 271 633 m
864 633 271 633 864 633 c
856 722.33 833.33 789.33 796 834 c
738.67 903.33 664.33 938 573 938 c
490.33 938 420.83 910.33 364.5 855 c
308.17 799.67 277 725.67 271 633 c
closepath } bind def
/s102 {
178 0 m
178 922 178 0 178 922 c
19 922 178 922 19 922 c
19 1062 19 922 19 1062 c
178 1062 19 1062 178 1062 c
178 1175 178 1062 178 1175 c
178 1246.33 184.33 1299.33 197 1334 c
214.33 1380.67 244.83 1418.5 288.5 1447.5 c
332.17 1476.5 393.33 1491 472 1491 c
522.67 1491 578.67 1485 640 1473 c
613 1316 640 1473 613 1316 c
575.67 1322.67 540.33 1326 507 1326 c
452.33 1326 413.67 1314.33 391 1291 c
368.33 1267.67 357 1224 357 1160 c
357 1062 357 1160 357 1062 c
564 1062 357 1062 564 1062 c
564 922 564 1062 564 922 c
357 922 564 922 357 922 c
357 0 357 922 357 0 c
178 0 357 0 178 0 c
closepath } bind def
/s103 {
102 -88 m
277 -114 102 -88 277 -114 c
284.33 -168 304.67 -207.33 338 -232 c
382.67 -265.33 443.67 -282 521 -282 c
604.33 -282 668.67 -265.33 714 -232 c
759.33 -198.67 790 -152 806 -92 c
815.33 -55.33 819.67 21.67 819 139 c
740.33 46.33 642.33 0 525 0 c
379 0 266 52.67 186 158 c
106 263.33 66 389.67 66 537 c
66 638.33 84.33 731.83 121 817.5 c
157.67 903.17 210.83 969.33 280.5 1016 c
350.17 1062.67 432 1086 526 1086 c
651.33 1086 754.67 1035.33 836 934 c
836 1062 836 934 836 1062 c
1002 1062 836 1062 1002 1062 c
1002 144 1002 1062 1002 144 c
1002 -21.33 985.17 -138.5 951.5 -207.5 c
917.83 -276.5 864.5 -331 791.5 -371 c
718.5 -411 628.67 -431 522 -431 c
395.33 -431 293 -402.5 215 -345.5 c
137 -288.5 99.33 -202.67 102 -88 c
closepath 251 550 m
251 410.67 278.67 309 334 245 c
389.33 181 458.67 149 542 149 c
624.67 149 694 180.83 750 244.5 c
806 308.17 834 408 834 544 c
834 674 805.17 772 747.5 838 c
689.83 904 620.33 937 539 937 c
459 937 391 904.5 335 839.5 c
279 774.5 251 678 251 550 c
closepath } bind def
/s105 {
136 1259 m
136 1466 136 1259 136 1466 c
316 1466 136 1466 316 1466 c
316 1259 316 1466 316 1259 c
136 1259 316 1259 136 1259 c
closepath 136 0 m
136 1062 136 0 136 1062 c
316 1062 136 1062 316 1062 c
316 0 316 1062 316 0 c
136 0 316 0 136 0 c
closepath } bind def
/s108 {
131 0 m
131 1466 131 0 131 1466 c
311 1466 131 1466 311 1466 c
311 0 311 1466 311 0 c
131 0 311 0 131 0 c
closepath } bind def
/s115 {
63 317 m
241 345 63 317 241 345 c
251 273.67 278.83 219 324.5 181 c
370.17 143 434 124 516 124 c
598.67 124 660 140.83 700 174.5 c
740 208.17 760 247.67 760 293 c
760 333.67 742.33 365.67 707 389 c
682.33 405 621 425.33 523 450 c
391 483.33 299.5 512.17 248.5 536.5 c
197.5 560.83 158.83 594.5 132.5 637.5 c
106.17 680.5 93 728 93 780 c
93 827.33 103.83 871.17 125.5 911.5 c
147.17 951.83 176.67 985.33 214 1012 c
242 1032.67 280.17 1050.17 328.5 1064.5 c
376.83 1078.83 428.67 1086 484 1086 c
567.33 1086 640.5 1074 703.5 1050 c
766.5 1026 813 993.5 843 952.5 c
873 911.5 893.67 856.67 905 788 c
729 764 905 788 729 764 c
721 818.67 697.83 861.33 659.5 892 c
621.17 922.67 567 938 497 938 c
414.33 938 355.33 924.33 320 897 c
284.67 869.67 267 837.67 267 801 c
267 777.67 274.33 756.67 289 738 c
303.67 718.67 326.67 702.67 358 690 c
376 683.33 429 668 517 644 c
644.33 610 733.17 582.17 783.5 560.5 c
833.83 538.83 873.33 507.33 902 466 c
930.67 424.67 945 373.33 945 312 c
945 252 927.5 195.5 892.5 142.5 c
857.5 89.5 807 48.5 741 19.5 c
675 -9.5 600.33 -24 517 -24 c
379 -24 273.83 4.67 201.5 62 c
129.17 119.33 83 204.33 63 317 c
closepath } bind def
/s117 {
831 0 m
831 156 831 0 831 156 c
748.33 36 636 -24 494 -24 c
431.33 -24 372.83 -12 318.5 12 c
264.17 36 223.83 66.17 197.5 102.5 c
171.17 138.83 152.67 183.33 142 236 c
134.67 271.33 131 327.33 131 404 c
131 1062 131 404 131 1062 c
311 1062 131 1062 311 1062 c
311 473 311 1062 311 473 c
311 379 314.67 315.67 322 283 c
333.33 235.67 357.33 198.5 394 171.5 c
430.67 144.5 476 131 530 131 c
584 131 634.67 144.83 682 172.5 c
729.33 200.17 762.83 237.83 782.5 285.5 c
802.17 333.17 812 402.33 812 493 c
812 1062 812 493 812 1062 c
992 1062 812 1062 992 1062 c
992 0 992 1062 992 0 c
831 0 992 0 831 0 c
closepath } bind def
end
/BuildGlyph {
 exch dup /Metrics get 2 index get 0 setcharwidth
/CharProcs get exch 2 copy known not{pop/.notdef}if get exec fill}bind def
/BuildChar {
1 index /Encoding get exch get
1 index /BuildGlyph get exec
} bind def
currentdict end /MC3_Arial exch definefont pop
%%EndFont
/clipproc{clippath{[{/m cvx}{/l cvx}{/c cvx}{/cp cvx}pathforall}stopped
{cleartomark[pathbbox exch 3 i sub exch 2 i sub/rectpath cvx}if]np}bd
/iclmtx mtx cmtx def/iclpath clipproc xd/clinit{pathproc initclip np iclpath cl np exec}bd
/clmove{pathproc 3 1 roll clippath pathproc 2 i neg 2 i neg tr initclip np exec cl tr np exec}bd
/clrect[gs np iclpath{pathbbox}stopped{0 0 813.37 571.21 }if gr]def
/cloper{mtx cmtx iclmtx smtx exch exec smtx}bd
/cland{{exch cvx exec}cloper}bd
/clcopy{{exch clinit cvx exec}cloper}bd
/cldiff{{exch pathbbox 4 -1 roll clrect 0 get 2 copy gt{exch}if pop 4 1 roll
 3 -1 roll clrect 1 get 2 copy gt{exch}if pop 3 1 roll
 2 -1 roll clrect 2 get 2 copy lt{exch}if pop 2 1 roll
 1 -1 roll clrect 3 get 2 copy lt{exch}if pop 1 1 roll
 exch 3 i sub exch 2 i sub rectpath cvx exec}cloper}bd
/icl{{clinit}cloper}bd
0.239953 0.239947 sc

/initmtx mtx cmtx def
initmtx smtx
[1.0000 0.0000 0.0000 1.0000 0.0000 0.0000 ] concat
 [1.00022 -0 0 -1.00025 0 2380.56] concat
gs
661 1906 m
2974 1906 l
7 sw
1 sj
1 scap
st
661 1906 m
661 1889 l
st
825 1906 m
825 1889 l
st
942 1906 m
942 1889 l
st
1033 1906 m
1033 1889 l
st
1107 1906 m
1107 1889 l
st
1169 1906 m
1169 1889 l
st
1223 1906 m
1223 1889 l
st
1271 1906 m
1271 1889 l
st
1595 1906 m
1595 1889 l
st
1759 1906 m
1759 1889 l
st
1876 1906 m
1876 1889 l
st
1966 1906 m
1966 1889 l
st
2040 1906 m
2040 1889 l
st
2103 1906 m
2103 1889 l
st
2157 1906 m
2157 1889 l
st
2205 1906 m
2205 1889 l
st
2528 1906 m
2528 1889 l
st
2693 1906 m
2693 1889 l
st
2810 1906 m
2810 1889 l
st
2900 1906 m
2900 1889 l
st
2974 1906 m
2974 1889 l
st
1314 1906 m
1314 1872 l
st
2247 1906 m
2247 1872 l
st
661 196 m
2974 196 l
st
661 196 m
661 213 l
st
825 196 m
825 213 l
st
942 196 m
942 213 l
st
1033 196 m
1033 213 l
st
1107 196 m
1107 213 l
st
1169 196 m
1169 213 l
st
1223 196 m
1223 213 l
st
1271 196 m
1271 213 l
st
1595 196 m
1595 213 l
st
1759 196 m
1759 213 l
st
1876 196 m
1876 213 l
st
1966 196 m
1966 213 l
st
2040 196 m
2040 213 l
st
2103 196 m
2103 213 l
st
2157 196 m
2157 213 l
st
2205 196 m
2205 213 l
st
2528 196 m
2528 213 l
st
2693 196 m
2693 213 l
st
2810 196 m
2810 213 l
st
2900 196 m
2900 213 l
st
2974 196 m
2974 213 l
st
1314 196 m
1314 230 l
st
2247 196 m
2247 230 l
st
661 1906 m
661 198 l
st
661 1716 m
678 1716 l
st
661 1337 m
678 1337 l
st
661 957 m
678 957 l
st
661 578 m
678 578 l
st
661 198 m
678 198 l
st
661 1906 m
695 1906 l
st
661 1526 m
695 1526 l
st
661 1147 m
695 1147 l
st
661 767 m
695 767 l
st
661 388 m
695 388 l
st
2974 1906 m
2974 198 l
st
2974 1716 m
2957 1716 l
st
2974 1337 m
2957 1337 l
st
2974 957 m
2957 957 l
st
2974 578 m
2957 578 l
st
2974 198 m
2957 198 l
st
2974 1906 m
2940 1906 l
st
2974 1526 m
2940 1526 l
st
2974 1147 m
2940 1147 l
st
2974 767 m
2940 767 l
st
2974 388 m
2940 388 l
st
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 150 self 1191 -2080 m
(10)[82 82 ] xs
1 -1 sc
1 -1 sc
/MC1_Arial 90 self 1357 -2006 m
(-2)[29 49 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 150 self 2124 -2080 m
(10)[82 82 ] xs
1 -1 sc
1 -1 sc
/MC1_Arial 90 self 2290 -2006 m
(-1)[29 49 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 150 self 540 -1951 m
(0)[82 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 150 self 540 -1571 m
(1)[82 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 150 self 540 -1192 m
(2)[82 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 150 self 540 -812 m
(3)[82 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
1 -1 sc
/MC1_Arial 150 self 540 -433 m
(4)[82 ] xs
1 -1 sc
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
gr
gs
pathproc 661 198 2314 1709 np rectpath
/eocl cland
np exec
926 978 36 36 rectfill
2940 388 m
3 sw
926 978 36 36 rectstroke
976 1036 36 36 rectfill
976 1036 36 36 rectstroke
1015 1089 36 36 rectfill
1015 1089 36 36 rectstroke
1055 1148 36 36 rectfill
1055 1148 36 36 rectstroke
1087 1278 36 36 rectfill
1087 1278 36 36 rectstroke
1123 1045 36 36 rectfill
1123 1045 36 36 rectstroke
1155 1228 36 36 rectfill
1155 1228 36 36 rectstroke
1187 1417 36 36 rectfill
1187 1417 36 36 rectstroke
1213 1408 36 36 rectfill
1213 1408 36 36 rectstroke
1237 1432 36 36 rectfill
1237 1432 36 36 rectstroke
1269 1467 36 36 rectfill
1269 1467 36 36 rectstroke
1297 1514 36 36 rectfill
1297 1514 36 36 rectstroke
1315 1373 36 36 rectfill
1315 1373 36 36 rectstroke
1352 905 36 36 rectfill
1352 905 36 36 rectstroke
1369 1035 36 36 rectfill
1369 1035 36 36 rectstroke
1407 1344 36 36 rectfill
1407 1344 36 36 rectstroke
1436 290 36 36 rectfill
1436 290 36 36 rectstroke
1470 686 36 36 rectfill
1470 686 36 36 rectstroke
1493 1010 36 36 rectfill
1493 1010 36 36 rectstroke
1513 1245 36 36 rectfill
1513 1245 36 36 rectstroke
1537 1266 36 36 rectfill
1537 1266 36 36 rectstroke
1555 474 36 36 rectfill
1555 474 36 36 rectstroke
1583 641 36 36 rectfill
1583 641 36 36 rectstroke
1616 671 36 36 rectfill
1616 671 36 36 rectstroke
1646 974 36 36 rectfill
1646 974 36 36 rectstroke
1656 624 36 36 rectfill
1656 624 36 36 rectstroke
1668 594 36 36 rectfill
1668 594 36 36 rectstroke
1686 657 36 36 rectfill
1686 657 36 36 rectstroke
1703 439 36 36 rectfill
1703 439 36 36 rectstroke
1721 625 36 36 rectfill
1721 625 36 36 rectstroke
1747 822 36 36 rectfill
1747 822 36 36 rectstroke
1759 918 36 36 rectfill
1759 918 36 36 rectstroke
1785 993 36 36 rectfill
1785 993 36 36 rectstroke
1805 1170 36 36 rectfill
1805 1170 36 36 rectstroke
1830 1393 36 36 rectfill
1830 1393 36 36 rectstroke
1832 774 36 36 rectfill
1832 774 36 36 rectstroke
1860 1067 36 36 rectfill
1860 1067 36 36 rectstroke
1880 1166 36 36 rectfill
1880 1166 36 36 rectstroke
1902 1389 36 36 rectfill
1902 1389 36 36 rectstroke
1909 1434 36 36 rectfill
1909 1434 36 36 rectstroke
1923 1404 36 36 rectfill
1923 1404 36 36 rectstroke
1940 1504 36 36 rectfill
1940 1504 36 36 rectstroke
1957 1122 36 36 rectfill
1957 1122 36 36 rectstroke
1959 1110 36 36 rectfill
1959 1110 36 36 rectstroke
1968 1338 36 36 rectfill
1968 1338 36 36 rectstroke
1986 539 36 36 rectfill
1986 539 36 36 rectstroke
1998 544 36 36 rectfill
1998 544 36 36 rectstroke
2006 1035 36 36 rectfill
2006 1035 36 36 rectstroke
2021 1437 36 36 rectfill
2021 1437 36 36 rectstroke
2053 1467 36 36 rectfill
2053 1467 36 36 rectstroke
2067 1070 36 36 rectfill
2067 1070 36 36 rectstroke
2098 1176 36 36 rectfill
2098 1176 36 36 rectstroke
2113 1268 36 36 rectfill
2113 1268 36 36 rectstroke
2129 1253 36 36 rectfill
2129 1253 36 36 rectstroke
2138 1285 36 36 rectfill
2138 1285 36 36 rectstroke
2165 1440 36 36 rectfill
2165 1440 36 36 rectstroke
2177 1290 36 36 rectfill
2177 1290 36 36 rectstroke
2201 1327 36 36 rectfill
2201 1327 36 36 rectstroke
2204 1247 36 36 rectfill
2204 1247 36 36 rectstroke
2232 1386 36 36 rectfill
2232 1386 36 36 rectstroke
2260 1354 36 36 rectfill
2260 1354 36 36 rectstroke
2276 1018 36 36 rectfill
2276 1018 36 36 rectstroke
2306 1184 36 36 rectfill
2306 1184 36 36 rectstroke
2328 1216 36 36 rectfill
2328 1216 36 36 rectstroke
2355 1171 36 36 rectfill
2355 1171 36 36 rectstroke
2365 1216 36 36 rectfill
2365 1216 36 36 rectstroke
2379 1076 36 36 rectfill
2379 1076 36 36 rectstroke
2406 1170 36 36 rectfill
2406 1170 36 36 rectstroke
2415 1182 36 36 rectfill
2415 1182 36 36 rectstroke
2433 903 36 36 rectfill
2433 903 36 36 rectstroke
2449 1104 36 36 rectfill
2449 1104 36 36 rectstroke
2449 1212 36 36 rectfill
2449 1212 36 36 rectstroke
2452 1185 36 36 rectfill
2452 1185 36 36 rectstroke
2472 956 36 36 rectfill
2472 956 36 36 rectstroke
2497 891 36 36 rectfill
2497 891 36 36 rectstroke
2520 1102 36 36 rectfill
2520 1102 36 36 rectstroke
2527 1051 36 36 rectfill
2527 1051 36 36 rectstroke
2543 1155 36 36 rectfill
2543 1155 36 36 rectstroke
2556 1321 36 36 rectfill
2556 1321 36 36 rectstroke
2588 1381 36 36 rectfill
2588 1381 36 36 rectstroke
2599 1355 36 36 rectfill
2599 1355 36 36 rectstroke
2622 1345 36 36 rectfill
2622 1345 36 36 rectstroke
2638 1397 36 36 rectfill
2638 1397 36 36 rectstroke
2657 1284 36 36 rectfill
2657 1284 36 36 rectstroke
2685 1240 36 36 rectfill
2685 1240 36 36 rectstroke
2700 1300 36 36 rectfill
2700 1300 36 36 rectstroke
2736 1197 36 36 rectfill
2736 1197 36 36 rectstroke
2737 1427 36 36 rectfill
2737 1427 36 36 rectstroke
2757 1428 36 36 rectfill
2757 1428 36 36 rectstroke
2766 1428 36 36 rectfill
2766 1428 36 36 rectstroke
2776 1430 36 36 rectfill
2776 1430 36 36 rectstroke
gr
gs
gs
1 -1 sc
381 -1439 tr
90 ro
/MC2_Symbol 200 self 0 0 m
/s61508 121 xgls
1 -1 sc
gr
gs
1 -1 sc
451 -1317 tr
90 ro
/MC3_Arial 120 self 0 0 m
(file)[32 26 26 66 ] xs
1 -1 sc
gr
gs
1 -1 sc
381 -1163 tr
90 ro
/MC3_Arial 200 self 0 0 m
(/)[55 ] xs
1 -1 sc
gr
gs
1 -1 sc
381 -1107 tr
90 ro
/MC2_Symbol 200 self 0 0 m
/s61508 121 xgls
1 -1 sc
gr
gs
1 -1 sc
451 -985 tr
90 ro
/MC3_Arial 120 self 0 0 m
(guess)[66 66 66 59 59 ] xs
1 -1 sc
gr
gr
gs
1 -1 sc
/MC1_Arial 200 self 1539 -2269 m
(q / nm)[110 55 55 55 110 166 ] xs
1 -1 sc
gr
gr
Save0 restore end
showpage
%%EOF
